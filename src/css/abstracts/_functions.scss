/* Functions - Funções SCSS úteis */

@use 'sass:math';
@use 'sass:string';

// Converter pixel para rem
@function livingstone-rem($pixels, $context: 16) {
    @return calc($pixels / $context) * 1rem;
}

// Converter pixel para em
@function livingstone-em($pixels, $context: 16) {
    @return calc($pixels / $context) * 1em;
}

// Obter valor de espaçamento
@function livingstone-spacing($key) {
    @if map-has-key($livingstone-spacers, $key) {
        @return map-get($livingstone-spacers, $key);
    } @else {
        @error "O espaçamento #{$key} não está definido no mapa $livingstone-spacers";
        @return null;
    }
}

// Clarear/escurecer cor
@function livingstone-color-adjust($color, $amount, $type: 'lighten') {
    @if $type == 'lighten' {
        @return lighten($color, $amount);
    } @else if $type == 'darken' {
        @return darken($color, $amount);
    } @else {
        @error "O tipo #{$type} não é válido. Use 'lighten' ou 'darken'";
        @return $color;
    }
}

// Função para substituir caracteres em strings
@function livingstone-str-replace($string, $search, $replace: '') {
    $index: string.index($string, $search);
    @if $index {
        @return string.slice($string, 1, $index - 1) + $replace +
            livingstone-str-replace(
                string.slice($string, $index + string.length($search)),
                $search,
                $replace
            );
    }
    @return $string;
}
